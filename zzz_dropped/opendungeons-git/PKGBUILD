# Maintainer: 404
# Contributor: carstene1ns <url/mail: arch carsten-teibes de>
# Contributor: MCMic <come.bernigaud@laposte.net>

_pkgname=opendungeons
pkgname=$_pkgname-git
pkgver=0.4.9.r193.ge1a00c5
pkgrel=1
pkgdesc="An open source, real time strategy game based on the Dungeon Keeper series of games (development version)"
arch=('i686' 'x86_64')
url="http://opendungeons.sourceforge.net/index.php/Main_Page"
license=('GPL3')
depends=('bash' 'sfml' 'ogre' 'cegui')
makedepends=('svn' 'cmake' 'git' 'boost')
conflicts=("$_pkgname")
source=($_pkgname::"git+http://git.code.sf.net/p/$_pkgname/git#branch=development"
        "svn+http://svn.code.sf.net/p/$_pkgname/svn/media"
        "svn+http://svn.code.sf.net/p/opendungeons/svn/mediaSource/Models/OD_Tilesets/OD_Tilesets_export/Tilesets_binary"
        "$_pkgname.sh")
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            '04a8b1bc5ce2752990aacd36cc129afc20705d0f4a7509ef9f848308fadc24af')

pkgver() {
  cd $_pkgname
  git describe --long --tags | sed 's/-/.r/;s/-/./'
}

prepare() {
  cd $_pkgname/cmake/modules

  # use finder script from system, does not link boost otherwise
  mv FindOGRE.cmake FindOGRE.cmake.bak
  # fix for cegui 0.8 #1
  sed 's|CEGUI.h|CEGUI/&|;s|CEGUIBase|&-0|;s|CEGUIOgreRenderer|&-0|' -i FindCEGUI.cmake
}

build() {
  cd $_pkgname

  # fix cegui 0.8 #2, add ogre dir and set C++11 for angelscript
  CEGUIDIR=/usr/include/cegui-0 cmake --prefix=/opt ./ \
    -DCMAKE_MODULE_PATH=/usr/lib/OGRE/cmake \
    -DCMAKE_CXX_FLAGS="-std=c++11"
  make
}

package() {
  # launcher
  install -Dm755 $_pkgname.sh "$pkgdir"/usr/bin/$_pkgname
  # binary
  install -Dm755 $_pkgname/OpenDungeons.bin "$pkgdir"/opt/$_pkgname/OpenDungeons.bin
  # media
  cp -r media/* "$pkgdir"/opt/$_pkgname
  cp Tilesets_binary/* "$pkgdir"/opt/$_pkgname/models
  # configs
  cp $_pkgname/resources_install.cfg "$pkgdir"/opt/$_pkgname/resources.cfg
  cp $_pkgname/{ogre,plugins}.cfg "$pkgdir"/opt/$_pkgname
  # test level
  cp $_pkgname/levels_git/*.level "$pkgdir"/opt/$_pkgname/levels
  # use 'a' variant of alternating data files, why is there no default defined anyway?
  cd Tilesets_binary
  for _f in *a.mesh ; do
    cp $_f "$pkgdir"/opt/$_pkgname/models/${_f%a.mesh}.mesh
  done
}
